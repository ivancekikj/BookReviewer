@model BookReviewer.Models.ViewModels.BookAuthorsPublishers
@using BookReviewer.Models.ViewModels
@{
    ViewBag.Title = "Edit Book";
}

<div class="row justify-content-center">
    @using (Html.BeginForm("Edit", "Books", FormMethod.Post, htmlAttributes: new { @class = "col-lg-6 col-md-8 col-11 border border-primary border-2 rounded-2 p-4", @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <h2 class="text-center mb-5">Edit Book</h2>
        @Html.HiddenFor(model => model.Book.Id)

        <!-- title -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.Book.Title, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(m => m.Book.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Book.Title, "", new { @class = "text-danger" })
        </div>

        <!-- isbn -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.Book.Isbn, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(m => m.Book.Isbn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Book.Isbn, "", new { @class = "text-danger" })
        </div>

        <!-- genre -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.Book.Genre, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(m => m.Book.Genre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Book.Genre, "", new { @class = "text-danger" })
        </div>

        <!-- date -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.Book.DatePublished, htmlAttributes: new { @class = "form-label" })
            @Html.TextBoxFor(m => m.Book.DatePublished, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
            @Html.ValidationMessageFor(m => m.Book.DatePublished, "", new { @class = "text-danger" })
        </div>

        <!-- image -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.ImageFile, htmlAttributes: new { @class = "form-label" })
            @Html.TextBoxFor(m => m.ImageFile, new { @class = "form-control", @type = "file" })
            @Html.ValidationMessageFor(m => m.ImageFile, "", new { @class = "text-danger" })
        </div>

        <!-- author -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.Book.AuthorId, htmlAttributes: new { @class = "form-label" })
            @Html.DropDownListFor(
                m => m.Book.AuthorId,
                Model.Authors
                    .Select(a => new SelectListItem
                         {
                        Text = a.FullName(),
                        Value = $"{a.Id}"
                    }),
                htmlAttributes: new { @class = "form-select" }
            )
            @Html.ValidationMessageFor(m => m.Book.AuthorId, "", new { @class = "text-danger" })
        </div>

        <!-- publisher -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.Book.PublisherId, htmlAttributes: new { @class = "form-label" })
            @Html.DropDownListFor(
                m => m.Book.PublisherId,
                Model.Publishers
                    .Select(p => new SelectListItem
                         {
                        Text = p.FullName(),
                        Value = $"{p.Id}"
                    }),
                htmlAttributes: new { @class = "form-select" }
            )
            @Html.ValidationMessageFor(m => m.Book.PublisherId, "", new { @class = "text-danger" })
        </div>

        <!-- description -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.Book.Description, htmlAttributes: new { @class = "form-label" })
            @Html.TextAreaFor(m => m.Book.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Book.Description, "", new { @class = "text-danger" })
        </div>

        <button class="btn btn-primary w-100">Submit</button>
    }
</div>


@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Isbn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Isbn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Isbn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DatePublished, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatePublished, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DatePublished, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AuthorId, "AuthorId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AuthorId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublisherId, "PublisherId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PublisherId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PublisherId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
