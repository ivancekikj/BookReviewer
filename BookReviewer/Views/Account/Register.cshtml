@model BookReviewer.Models.RegisterViewModel
@using BookReviewer.Models

@{
    ViewBag.Title = "Register";
}

<div class="row justify-content-center">
    @using (Html.BeginForm("Register", "Account", FormMethod.Post, htmlAttributes: new { @class = "col-lg-6 col-md-8 col-11 border border-primary border-2 rounded-2 p-4", @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <h2 class="text-center mb-5">Register</h2>

        @*@Html.ValidationSummary("", new { @class = "text-danger" })*@

        <!-- username -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.Username, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(m => m.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
        </div>

        <!-- email -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "form-label" })
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @type = "email" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>

        <!-- first name -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.FirstName, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
        </div>

        <!-- last name -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.LastName, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
        </div>

        <!-- image -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.ImageFile, htmlAttributes: new { @class = "form-label" })
            @Html.TextBoxFor(m => m.ImageFile, new { @class = "form-control", @type = "file" })
            @Html.ValidationMessageFor(m => m.ImageFile, "", new { @class = "text-danger" })
        </div>

        <!-- password -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.Password, htmlAttributes: new { @class = "form-label" })
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>

        <!-- password confirm -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.ConfirmPassword, htmlAttributes: new { @class = "form-label" })
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        </div>

        <!-- role -->
        <div class="form-group mb-4">
            @Html.LabelFor(m => m.ChosenRole, htmlAttributes: new { @class = "form-label" })
            @Html.DropDownListFor(
                m => m.ChosenRole,
                RegisterViewModel.Roles,
                htmlAttributes: new { @class = "form-select" }
            )
            @Html.ValidationMessageFor(m => m.ChosenRole, "", new { @class = "text-danger" })
        </div>

        <button class="btn btn-primary w-100">Submit</button>
    }
</div>

@*<main aria-labelledby="title">
    <h2 id="title">@ViewBag.Title.</h2>

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Create a new account.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="row">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.LastName, new { @class = "form-control" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Username, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Username, new { @class = "form-control" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.ChosenRole, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ChosenRole, new SelectList(Model.Roles.Select(x => new { Value = x, Text = x }),"Value","Text"), new { @class = "form-control" })
            </div>
        </div>
        <div class="row">
            <div class="offset-md-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-outline-dark" />
            </div>
        </div>
    }
</main>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
